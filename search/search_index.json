{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction evade84 is a fundamental system of anonymous communication. Work is still in progress. Clients, docs, manuals and more is coming soon. Roadmap: Release +-final version of evade84-node . Write some docs and manuals. Release +-final version of eef (maybe even rename it :/). Write some other clients: web, desktop, mobile, pager, toaster, synth, your kitten, etc. Be happy for a while. Rewrite everything in Rust. Forget about this project, 'cause no one cares about it. ... You may also donate some crypto if you wish to support development: BTC: bc1q9xh45gmdr5cd6nt7x55zmmjzrlf6v4wan5u6vz","title":"Introduction"},{"location":"#introduction","text":"evade84 is a fundamental system of anonymous communication. Work is still in progress. Clients, docs, manuals and more is coming soon. Roadmap: Release +-final version of evade84-node . Write some docs and manuals. Release +-final version of eef (maybe even rename it :/). Write some other clients: web, desktop, mobile, pager, toaster, synth, your kitten, etc. Be happy for a while. Rewrite everything in Rust. Forget about this project, 'cause no one cares about it. ... You may also donate some crypto if you wish to support development: BTC: bc1q9xh45gmdr5cd6nt7x55zmmjzrlf6v4wan5u6vz","title":"Introduction"},{"location":"getting-started/basic-definitions/","text":"Basic definitions The article contains important terms for understanding the system. Pool Pool is something like chat-room or chat in Telegram. It contains messages sent by users. Every pool has an unique address (which is literally a hex value of uuid4 ). Also pool may optionally have a tag . It is an unique readable identifier (e.g. my-blog123 ). It can be used to link any specific pool as well as pool address . Pool tag and pool address are called pool identifier . Pool meta data Pool also has some meta data (all fields are optional ): Description (mutable) - description of pool Creator signature (mutable) - signature of pool creator Creation date (immutable) - date of pool creation Pool types Pool must be one of the following types: Type Who can write messages Who can read messages Who can manage pool wall anyone anyone master-key owner vault write-key owner read-key owner master-key owner media write-key owner anyone master-key owner box anyone read-key owner master-key owner wall is like real wall - anyone can read from it and write anything on it! vault is like real vault - it is safe and no passerby is able to break in it! channel is like real media - anyone can read it, but only few people with access are able to write! box is like real box (I mean box with a small hole for papers and lock on it) - anyone can throw paper in it, only key owners are able to open it and read content of papers! Pool access keys Access to pool is managed via access keys . There are three different types of them: master-key is present in pools of any type. It provides access to: Editing pool meta data Editing write-key and master-key Deleting pool write-key provides access to writing messages in pools which are vault or channel . read-key provides access to reading messages in pools which are vault or box . Pool, depending on its type has write-key and/or read-key . But it always has a master-key . Indexable and non-indexable pools ... Signature Signature is used to authorize users. It is something that proves, that action was performed by the specific user. Anyone can create as many signatures as needed. Moreover, signature is optional, you may stay fully anonymous if you wish! Signature has name (must be unique) and identifier . Pool identifier and signature identifier are different things. Pool identifier means pool tag or pool address , when signature identifier means certain string which is unique and used to identify signature. Signature meta data Signatures have meta data (all fields are optional ): Description (mutable) - description of signature. Creation date (immutable) - date when signature was created. Signature access key Signature access is managed using signature access key . Anyone who owns this key is able to sign his/her messages or created pools with specific signature; edit signature description. Deleting signature Signature cannot be deleted.","title":"Basic definitions"},{"location":"getting-started/basic-definitions/#basic-definitions","text":"The article contains important terms for understanding the system.","title":"Basic definitions"},{"location":"getting-started/basic-definitions/#pool","text":"Pool is something like chat-room or chat in Telegram. It contains messages sent by users. Every pool has an unique address (which is literally a hex value of uuid4 ). Also pool may optionally have a tag . It is an unique readable identifier (e.g. my-blog123 ). It can be used to link any specific pool as well as pool address . Pool tag and pool address are called pool identifier .","title":"Pool"},{"location":"getting-started/basic-definitions/#pool-meta-data","text":"Pool also has some meta data (all fields are optional ): Description (mutable) - description of pool Creator signature (mutable) - signature of pool creator Creation date (immutable) - date of pool creation","title":"Pool meta data"},{"location":"getting-started/basic-definitions/#pool-types","text":"Pool must be one of the following types: Type Who can write messages Who can read messages Who can manage pool wall anyone anyone master-key owner vault write-key owner read-key owner master-key owner media write-key owner anyone master-key owner box anyone read-key owner master-key owner wall is like real wall - anyone can read from it and write anything on it! vault is like real vault - it is safe and no passerby is able to break in it! channel is like real media - anyone can read it, but only few people with access are able to write! box is like real box (I mean box with a small hole for papers and lock on it) - anyone can throw paper in it, only key owners are able to open it and read content of papers!","title":"Pool types"},{"location":"getting-started/basic-definitions/#pool-access-keys","text":"Access to pool is managed via access keys . There are three different types of them: master-key is present in pools of any type. It provides access to: Editing pool meta data Editing write-key and master-key Deleting pool write-key provides access to writing messages in pools which are vault or channel . read-key provides access to reading messages in pools which are vault or box . Pool, depending on its type has write-key and/or read-key . But it always has a master-key .","title":"Pool access keys"},{"location":"getting-started/basic-definitions/#indexable-and-non-indexable-pools","text":"...","title":"Indexable and non-indexable pools"},{"location":"getting-started/basic-definitions/#signature","text":"Signature is used to authorize users. It is something that proves, that action was performed by the specific user. Anyone can create as many signatures as needed. Moreover, signature is optional, you may stay fully anonymous if you wish! Signature has name (must be unique) and identifier . Pool identifier and signature identifier are different things. Pool identifier means pool tag or pool address , when signature identifier means certain string which is unique and used to identify signature.","title":"Signature"},{"location":"getting-started/basic-definitions/#signature-meta-data","text":"Signatures have meta data (all fields are optional ): Description (mutable) - description of signature. Creation date (immutable) - date when signature was created.","title":"Signature meta data"},{"location":"getting-started/basic-definitions/#signature-access-key","text":"Signature access is managed using signature access key . Anyone who owns this key is able to sign his/her messages or created pools with specific signature; edit signature description.","title":"Signature access key"},{"location":"getting-started/basic-definitions/#deleting-signature","text":"Signature cannot be deleted.","title":"Deleting signature"},{"location":"getting-started/connecting-to-node/","text":"Connecting to evade84-node","title":"Connecting to evade84-node"},{"location":"getting-started/connecting-to-node/#connecting-to-evade84-node","text":"","title":"Connecting to evade84-node"},{"location":"getting-started/deploying-node/","text":"Deploying evade84-node","title":"Deploying evade84-node"},{"location":"getting-started/deploying-node/#deploying-evade84-node","text":"","title":"Deploying evade84-node"}]}